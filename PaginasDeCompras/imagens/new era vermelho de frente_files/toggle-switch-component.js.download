class ToggleSwitchComponent extends HTMLElement {
    constructor() {
       super();
        this.attachShadow({ mode: "open" });
        // Load the template from the HTML file
        this.shadowRoot.innerHTML = `
            <style>
                @import url("/vendor/dafiti/bootstrap/dist/components/toggle-switch/css/toggle-switch.css");
                @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&family=Roboto:wght@400;700&display=swap');
            </style>
            <label class="switch">
                <input type="checkbox"></input>
                <span class="slider round"></span>
            </label>
            <span id="message"></span>
        `;

        // Add change listener to input
        this.shadowRoot.querySelector("input").addEventListener("change", () => {
            const isChecked = this.checked;
            const checkboxName = this.getAttribute("name");
            const event = new CustomEvent("changeToggleSwitch", {
                detail: { isChecked, checkboxName },
            });

            this.dispatchEvent(event);
        });
    }

    connectedCallback() {
        const span = this.shadowRoot.getElementById('message');
        span.textContent = this.getAttribute('data-field');

        if (this.hasAttribute('name')) {
            const checkbox = this.shadowRoot.querySelector(`input[type="checkbox"]`);
            checkbox.setAttribute('name', this.getAttribute('name'));
        }

        if (this.hasAttribute('data-label')) {
            const span = this.shadowRoot.querySelector(`span#message`);
            span.setAttribute('data-label', this.getAttribute('data-label'));
        }
    }

    get checked() {
        return this.shadowRoot.querySelector("input").checked;
    }

    set checked(value) {
        this.shadowRoot.querySelector("input").checked = value;
    }

    static get observedAttributes() {
        return ['data-label'];
    }

    attributeChangedCallback(name, oldValue, newValue) {
        if (name === 'data-label') {
            this.updateDataLabel(newValue);
        }
    }

    updateDataLabel(price) {
        const label = this.shadowRoot.querySelector('span#message');
        if (label !== null && price != "") {
            label.setAttribute('data-label', price);
        }
      }
  }

  customElements.get('toggle-switch-component') || customElements.define('toggle-switch-component', ToggleSwitchComponent);
